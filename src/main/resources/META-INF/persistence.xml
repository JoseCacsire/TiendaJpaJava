<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.2"
	xmlns="http://xmlns.jcp.org/xml/ns/persistence"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd">

	<persistence-unit name="tienda"
		transaction-type="RESOURCE_LOCAL">
		<!-- <class>com.latam.alura.tienda.Producto</class> -->
		<properties>
			<!-- características del software que nos permiten conectar nuestra base 
				de datos con la aplicación La encargada de hacer todas esto va a ser JPA -->

			<!-- driver que nos permita realizar la conexión con la base de datos. -->
			<property name="javax.persistence.jdbc.driver"
				value="org.h2.Driver" />
			<!-- La url le indica a la api donde se encuentra almacenada la base de 
				datos. -->
			<property name="javax.persistence.jdbc.url"
				value="jdbc:h2:C:\Users\JOSE LUIS\Music\JPA\tienda" />
			<property name="javax.persistence.jdbc.user" value="sa" />
			<property name="javax.persistence.jdbc.password" value="123" />
			<!-- Nos va a permitir ver la operacion que se está realizando en la base 
				de datos -->
			<property name="hibernate.show_sql" value="true" />
			<!-- presenta las consultas de una forma más organizada (mejor estetica) -->
			<property name="hibernate.format_sql" value="true" />
			<property name="hibernate.dialect"
				value="org.hibernate.dialect.H2Dialect" />
			<property name="hibernate.hbm2ddl.auto" value="create-drop" />
			<!--Y tenemos “update”, que él crea la tabla en caso de que no exista 
				y en caso de que exista él realiza las operaciones y si está faltando un 
				nuevo elemento, él lo crea. -->
			<!-- <property name="hibernate.hbm2ddl.auto" value="update" /> -->
		</properties>
	</persistence-unit>
</persistence>